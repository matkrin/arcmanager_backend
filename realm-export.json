{
  "id": "0bf0bec0-552b-44a3-8152-1cf8571f0c9f",
  "realm": "arcmanager",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 7200,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ff5b8bd0-c192-4ead-80d7-bb000a73a3d0",
        "name": "default-roles-arcmanager",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "arcmanager": [
              "admin"
            ],
            "broker": [
              "read-token"
            ]
          }
        },
        "clientRole": false,
        "containerId": "0bf0bec0-552b-44a3-8152-1cf8571f0c9f",
        "attributes": {}
      },
      {
        "id": "c8e98407-39bc-4553-8605-186b3050300c",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "0bf0bec0-552b-44a3-8152-1cf8571f0c9f",
        "attributes": {}
      },
      {
        "id": "e5901fe4-fe38-4353-be10-aff9588910cb",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "0bf0bec0-552b-44a3-8152-1cf8571f0c9f",
        "attributes": {}
      }
    ],
    "client": {
      "arcmanager": [
        {
          "id": "2799a2c0-9d53-42d1-9e49-127c6a178fee",
          "name": "admin",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "id": "244a9154-aab7-4723-891f-9d5fa50f1df8",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "836add6b-72f3-4e45-8b57-06051771f941",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "ef529fcd-8d68-4292-8383-456d59655d21",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "4413874d-237c-4a9c-8b4c-d55aa05ae5d6",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "421970d0-20d8-4563-897c-6b36eb2b9dc9",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "b6157704-5e86-42a0-815e-78996bde4090",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "6fd10322-05a4-4ea2-9b0a-6aadab446aab",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "manage-clients",
                "query-users",
                "manage-realm",
                "impersonation",
                "view-events",
                "view-identity-providers",
                "manage-users",
                "view-users",
                "query-groups",
                "manage-identity-providers",
                "view-realm",
                "manage-events",
                "create-client",
                "query-clients",
                "manage-authorization",
                "view-authorization",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "b3bb3563-c9ba-408a-b04b-106e50c6ae17",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "68aef7ce-ba0d-485a-8388-c41357ca9fdf",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "bdc9e71a-2dbf-447b-b0c7-23165c8c9ae5",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "a26d14e0-1545-4c7f-a229-27002bab9e4d",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "8ceef5aa-9775-4531-9314-9f36f25089ac",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "ff6fb332-7919-4d78-a408-37932018ab05",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "84d170f4-48b5-4614-8a9b-99abdcc20d19",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "f8b7c25e-098d-4326-ba4f-6e8ee30b9a66",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "c4f2e058-b6ef-4aa1-a27a-4e768691c62f",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "f5ac9740-0af4-4610-8f00-eb0e6c3dcd4e",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "abca9797-faf2-4afc-a452-eafc473c00f3",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        },
        {
          "id": "e3dc2575-e88b-4ddf-b9c9-c9d328bd295c",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "138510fa-8d63-4477-9ff6-b868a8f2eef9",
          "name": "read-token",
          "description": "broker read token",
          "composite": false,
          "clientRole": true,
          "containerId": "75a5fcf4-07e3-4600-baef-70329503ce74",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "7cd039cb-2fa0-4386-ace5-084a5c22be25",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "c9233123-7259-472a-8e5a-2d4c76c3714f",
          "attributes": {}
        },
        {
          "id": "1aa7692e-fdbd-4f5a-ba80-c4d8b140dcb8",
          "name": "view-groups",
          "composite": false,
          "clientRole": true,
          "containerId": "c9233123-7259-472a-8e5a-2d4c76c3714f",
          "attributes": {}
        },
        {
          "id": "d73e5b4d-2256-4b16-9fa2-6b654469dee8",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "c9233123-7259-472a-8e5a-2d4c76c3714f",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "ff5b8bd0-c192-4ead-80d7-bb000a73a3d0",
    "name": "default-roles-arcmanager",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "0bf0bec0-552b-44a3-8152-1cf8571f0c9f"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "c9233123-7259-472a-8e5a-2d4c76c3714f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/arcmanager/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/arcmanager/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9cffe4fb-4f11-4060-9df8-921526794369",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/arcmanager/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/arcmanager/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3c25bce2-f20c-4f72-bd82-77dc8a302e54",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0a4be8cb-e913-4cdd-a350-b42393653895",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
      "clientId": "arcmanager",
      "name": "",
      "description": "",
      "rootUrl": "https://localhost:5173",
      "adminUrl": "https://localhost:5173/",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://localhost:5173/",
        "https://localhost:5173/*",
        "https://localhost:4173",
        "https://localhost:4173/*"
      ],
      "webOrigins": [
        "https://localhost:5173/*",
        "https://localhost:4173",
        "https://localhost:5173"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1693813518",
        "post.logout.redirect.uris": "https://localhost:5173/##https://localhost:4173/",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "75a5fcf4-07e3-4600-baef-70329503ce74",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6362f1e2-2a29-45b6-b5fe-7e196bf7ee07",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": false,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "idp.resource.4c971768-2739-4320-9feb-cfdcf9488e16",
            "type": "IdentityProvider",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "fd3b440e-d6bb-4c14-8b00-2a681de4ab2a",
            "uris": [],
            "scopes": [
              {
                "name": "token-exchange"
              }
            ]
          },
          {
            "name": "client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "Client",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "f86e3a88-0a51-4f91-b35c-664a559d5923",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "map-roles-client-scope"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "configure"
              },
              {
                "name": "manage"
              },
              {
                "name": "token-exchange"
              },
              {
                "name": "map-roles-composite"
              }
            ]
          },
          {
            "name": "idp.resource.80161f94-3c6e-4203-b18d-6351130afd9d",
            "type": "IdentityProvider",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "db808185-1490-4d0d-993a-7a6f50044dbb",
            "uris": [],
            "scopes": [
              {
                "name": "token-exchange"
              }
            ]
          },
          {
            "name": "idp.resource.013d5882-7b2e-452f-9422-a1c3ceb3fe54",
            "type": "IdentityProvider",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "8816b18d-737f-40b0-aaec-7e25047cb5c1",
            "uris": [],
            "scopes": [
              {
                "name": "token-exchange"
              }
            ]
          },
          {
            "name": "client.resource.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "Client",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "1ef5a3dc-59eb-4bee-b4c2-fd9b7e00b76a",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "map-roles-client-scope"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "configure"
              },
              {
                "name": "manage"
              },
              {
                "name": "token-exchange"
              },
              {
                "name": "map-roles-composite"
              }
            ]
          },
          {
            "name": "role.resource.138510fa-8d63-4477-9ff6-b868a8f2eef9",
            "type": "Role",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "477cd491-6ec3-4e56-a14a-2c0b77f198e9",
            "uris": [],
            "scopes": [
              {
                "name": "map-role-composite"
              },
              {
                "name": "map-role-client-scope"
              },
              {
                "name": "map-role"
              }
            ]
          },
          {
            "name": "idp.resource.74e49d53-be72-427e-87df-76fac25bf725",
            "type": "IdentityProvider",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "140f0fe2-381a-4c6d-a292-1d14648f638d",
            "uris": [],
            "scopes": [
              {
                "name": "token-exchange"
              }
            ]
          },
          {
            "name": "idp.resource.f7e8cbd4-03be-440f-bb34-a700cad1b018",
            "type": "IdentityProvider",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "c65c0574-07c5-406c-a5ec-1a4ae6fafb90",
            "uris": [],
            "scopes": [
              {
                "name": "token-exchange"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "bfdc2093-c444-43cc-b3cf-836e276877fb",
            "name": "gitlab-exchange",
            "description": "",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"arcmanager\"]"
            }
          },
          {
            "id": "1721d374-3aa8-4226-901a-337ea0256968",
            "name": "token-exchange.permission.idp.4c971768-2739-4320-9feb-cfdcf9488e16",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"idp.resource.4c971768-2739-4320-9feb-cfdcf9488e16\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "ee8ebd4c-dea1-40fc-84d7-7c26c01e4a88",
            "name": "manage.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"manage\"]"
            }
          },
          {
            "id": "e1caaea3-c39f-4b83-abb8-6518851254d2",
            "name": "configure.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"configure\"]"
            }
          },
          {
            "id": "8b7a60bc-621f-49d3-8036-6c46680750fe",
            "name": "view.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"view\"]"
            }
          },
          {
            "id": "aa24392d-eae5-4650-9140-a9ab70c9657e",
            "name": "map-roles.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"map-roles\"]"
            }
          },
          {
            "id": "b2650186-7db2-494a-ac64-af54247fd26c",
            "name": "map-roles-client-scope.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"map-roles-client-scope\"]"
            }
          },
          {
            "id": "15616bde-aa82-41ae-a649-1c0f7169e353",
            "name": "map-roles-composite.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"map-roles-composite\"]"
            }
          },
          {
            "id": "4f74433f-57e0-446c-8236-46900d0b24ce",
            "name": "token-exchange.permission.client.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.e7b94ad1-dd50-43a1-bfb9-8ee41e3ea471\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "543df3f9-2174-4b16-b602-8569caf6834b",
            "name": "token-exchange.permission.idp.80161f94-3c6e-4203-b18d-6351130afd9d",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"idp.resource.80161f94-3c6e-4203-b18d-6351130afd9d\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "a183a20d-0393-4906-94bc-0e7533ef2219",
            "name": "token-exchange.permission.idp.013d5882-7b2e-452f-9422-a1c3ceb3fe54",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"idp.resource.013d5882-7b2e-452f-9422-a1c3ceb3fe54\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "19815832-2d06-4416-b8bf-3349f63b3f24",
            "name": "manage.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"manage\"]"
            }
          },
          {
            "id": "acd818a2-bbf4-4539-8f8e-72914f1f686a",
            "name": "configure.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"configure\"]"
            }
          },
          {
            "id": "123f5651-5341-49dd-9598-224021d2ec78",
            "name": "view.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"view\"]"
            }
          },
          {
            "id": "efbf85d4-1ac5-4622-933d-9e013e27c9eb",
            "name": "map-roles.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"map-roles\"]"
            }
          },
          {
            "id": "9e1b165f-cdb4-40a5-ab7b-95054f91884f",
            "name": "map-roles-client-scope.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"map-roles-client-scope\"]"
            }
          },
          {
            "id": "893cbc61-3d23-4036-870e-d4380e00e030",
            "name": "map-roles-composite.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"map-roles-composite\"]"
            }
          },
          {
            "id": "11fecf7e-bfd7-4d36-97dd-e0d18cd39754",
            "name": "token-exchange.permission.client.75a5fcf4-07e3-4600-baef-70329503ce74",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.75a5fcf4-07e3-4600-baef-70329503ce74\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "4e11b79d-cace-4593-880f-96cc6299df38",
            "name": "map-role.permission.138510fa-8d63-4477-9ff6-b868a8f2eef9",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "resources": "[\"role.resource.138510fa-8d63-4477-9ff6-b868a8f2eef9\"]",
              "scopes": "[\"map-role\"]"
            }
          },
          {
            "id": "a3be7d57-2af2-42a7-bc16-fc4243635555",
            "name": "map-role-client-scope.permission.138510fa-8d63-4477-9ff6-b868a8f2eef9",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "resources": "[\"role.resource.138510fa-8d63-4477-9ff6-b868a8f2eef9\"]",
              "scopes": "[\"map-role-client-scope\"]"
            }
          },
          {
            "id": "bc95b258-b768-4866-bdc1-9568bc96686d",
            "name": "map-role-composite.permission.138510fa-8d63-4477-9ff6-b868a8f2eef9",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "resources": "[\"role.resource.138510fa-8d63-4477-9ff6-b868a8f2eef9\"]",
              "scopes": "[\"map-role-composite\"]"
            }
          },
          {
            "id": "ff608d00-e6fc-4d34-82d7-0d53d49c0664",
            "name": "token-exchange.permission.idp.74e49d53-be72-427e-87df-76fac25bf725",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"idp.resource.74e49d53-be72-427e-87df-76fac25bf725\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          },
          {
            "id": "dc75114f-6f50-426a-9c74-2f8bfede89e9",
            "name": "token-exchange.permission.idp.f7e8cbd4-03be-440f-bb34-a700cad1b018",
            "description": "",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"idp.resource.f7e8cbd4-03be-440f-bb34-a700cad1b018\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"gitlab-exchange\"]"
            }
          }
        ],
        "scopes": [
          {
            "id": "058a7100-85e8-4c98-9999-9d993ffb7780",
            "name": "token-exchange"
          },
          {
            "id": "bed25669-145f-4826-9be2-25f9364799a2",
            "name": "manage"
          },
          {
            "id": "7c8eb7db-9775-41d6-ab5f-dd080d5fbae4",
            "name": "view"
          },
          {
            "id": "207741c3-cd1e-4660-b327-b44668fdfc79",
            "name": "map-roles"
          },
          {
            "id": "a3462d85-dc91-4878-bd1d-d7d9adcc1fd1",
            "name": "map-roles-client-scope"
          },
          {
            "id": "a8ccfb12-26c0-4fc0-bc60-46ef888485a2",
            "name": "map-roles-composite"
          },
          {
            "id": "aabdfe3d-ecf4-4e53-9392-20ac6ab06a1e",
            "name": "configure"
          },
          {
            "id": "15ef089d-43a5-4437-8407-3e6000021c0d",
            "name": "map-role"
          },
          {
            "id": "2cf13478-1279-4b26-8461-38d7269129c7",
            "name": "map-role-client-scope"
          },
          {
            "id": "f328881e-6fda-4af4-a1c0-b1556d66da77",
            "name": "map-role-composite"
          }
        ],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "1f0ff514-03d9-44a9-8767-349a407f1b68",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/arcmanager/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/arcmanager/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3c44cc84-7e8a-4e39-bc0d-a4b9379991e0",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "2ba956dc-89da-437c-8faf-6b4fa37a2abc",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "569809ac-9bc5-4ea1-9f9d-7aeed52d0eb3",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "feb6923a-910c-4bd0-b74f-98338f1606fd",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "ffe79eab-aa8d-4fac-bf7d-32f6deb6919b",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "1b38149f-23cf-451b-808a-6ef764ae08db",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "fbc5e5a4-3d7e-456d-bb54-ffecd1bd1db3",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5f76ff07-9ec5-4264-8e28-604fa15327fd",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "c4b9c733-b603-4d12-9e60-dde7e353bca3",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a797cab3-af90-44a3-bb16-c17e855f9a86",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "da0d91ed-be75-42ae-a16f-b857508cd0cb",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4ed96d0d-f680-43c3-911b-cf33c93a7055",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3d966349-9bbd-412e-bd1b-1fe45ce447a4",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "8056d61d-c17d-4e7b-a732-883238ce4476",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "624eed06-3f49-4d54-ba7c-c6d05b43f3f2",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "ffb1da8a-56a5-446c-818c-1dca7efcc2b1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "caee357c-17c9-41da-ac65-e1c8754a5afb",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "fc424f15-c662-4b27-844f-7b3c17a30cf7",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "be84524d-9836-49cb-9767-a4d1480bbe57",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "33ff3da1-c344-4853-a397-5876ec680f0a",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0fb4b2b5-b6ee-4783-960b-a760fbcb50ad",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "f22f62d2-b2e5-4880-b7ca-c0231badd86d",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3a0b4f2-93e3-45f5-bdde-b3261904305f",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "20719f82-87cb-4183-99f5-0a5ff1f5ba96",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cf7ebd16-d078-4457-8648-e97868c7729e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0336eb0c-0b0f-4b46-8766-0dfb38ce3c71",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "24e11995-d848-4c0f-8931-80b9a06325db",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "87018ba7-2d6d-48d8-8d1b-6ee2cae7b488",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "152e3249-7c48-4670-b49d-ef28114dd0fb",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "588666f2-709d-4541-b147-4dc0b35c1810",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f67b632d-dd71-46fe-8b13-34fa3f4f4f58",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1850b32c-d6fa-476a-a06d-b9dec25d1c4e",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5497b819-0f4c-45c0-9564-98dc06b5bbbb",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eca78e7e-042a-419b-9eb4-d30ff3792857",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab9c13ed-a3ab-4419-87fa-165b116515a2",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5f499a41-9cdf-45c7-9fc7-2c83fb202dbd",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08035e84-167f-4ea0-ba82-c646f931ccd7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3b62d01-d151-432b-9fcf-b3e8f6cd0f8d",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "Gitlab",
      "displayName": "Gitlab Freiburg",
      "internalId": "013d5882-7b2e-452f-9422-a1c3ceb3fe54",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "tokenUrl": "https://git.nfdi4plants.org/oauth/token",
        "acceptsPromptNoneForwardFromClient": "false",
        "jwksUrl": "https://git.nfdi4plants.org/oauth/discovery/keys",
        "filteredByClaim": "false",
        "backchannelSupported": "false",
        "issuer": "https://git.nfdi4plants.org",
        "pkceMethod": "S256",
        "loginHint": "false",
        "clientAuthMethod": "client_secret_post",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256",
        "clientSecret": "**********",
        "allowedClockSkew": "0",
        "defaultScope": "api openid profile email",
        "userInfoUrl": "https://git.nfdi4plants.org/oauth/userinfo",
        "validateSignature": "true",
        "hideOnLoginPage": "false",
        "clientId": "b28f5ab578608aec89be0867e3284a6c421b49abb4560fd985bea2ee29130405",
        "uiLocales": "false",
        "useJwksUrl": "true",
        "pkceEnabled": "true",
        "authorizationUrl": "https://git.nfdi4plants.org/oauth/authorize",
        "disableUserInfo": "false",
        "passMaxAge": "false"
      }
    },
    {
      "alias": "Gitlab_Tu",
      "displayName": "Gitlab Tübingen",
      "internalId": "74e49d53-be72-427e-87df-76fac25bf725",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://gitlab.nfdi4plants.de/oauth/userinfo",
        "validateSignature": "true",
        "hideOnLoginPage": "false",
        "tokenUrl": "https://gitlab.nfdi4plants.de/oauth/token",
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "f5566a7704e4e9e0b5fa3b1b603ef90a0d6ede269987fd82ffeca7475cb8b88c",
        "uiLocales": "false",
        "jwksUrl": "https://gitlab.nfdi4plants.de/oauth/discovery/keys",
        "filteredByClaim": "false",
        "backchannelSupported": "false",
        "issuer": "https://gitlab.nfdi4plants.de",
        "useJwksUrl": "true",
        "loginHint": "false",
        "pkceEnabled": "false",
        "clientAuthMethod": "client_secret_post",
        "authorizationUrl": "https://gitlab.nfdi4plants.de/oauth/authorize",
        "disableUserInfo": "false",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "passMaxAge": "false",
        "allowedClockSkew": "0",
        "defaultScope": "api openid profile email"
      }
    },
    {
      "alias": "Gitlab_Dev",
      "displayName": "Gitlab Dev",
      "internalId": "f7e8cbd4-03be-440f-bb34-a700cad1b018",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://gitdev.nfdi4plants.org/oauth/userinfo",
        "validateSignature": "true",
        "hideOnLoginPage": "false",
        "tokenUrl": "https://gitdev.nfdi4plants.org/oauth/token",
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "2f92f5957e88abb828a215fbad2efee5627b404f10ffcf66e4354726c288aa99",
        "uiLocales": "false",
        "jwksUrl": "https://gitdev.nfdi4plants.org/oauth/discovery/keys",
        "filteredByClaim": "false",
        "backchannelSupported": "false",
        "issuer": "https://gitdev.nfdi4plants.org",
        "useJwksUrl": "true",
        "loginHint": "false",
        "pkceEnabled": "false",
        "clientAuthMethod": "client_secret_post",
        "authorizationUrl": "https://gitdev.nfdi4plants.org/oauth/authorize",
        "disableUserInfo": "false",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "passMaxAge": "false",
        "allowedClockSkew": "0",
        "defaultScope": "api openid profile email"
      }
    },
    {
      "alias": "Gitlab_Pm",
      "displayName": "Gitlab Plantmicrobe",
      "internalId": "a7143cc1-5d15-411b-813d-641e96079f61",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://gitlab.plantmicrobe.de/oauth/userinfo",
        "validateSignature": "true",
        "hideOnLoginPage": "false",
        "tokenUrl": "https://gitlab.plantmicrobe.de/oauth/token",
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "2143d4e493c0f992a75d5dbbdd69ce808b732e8f41847d932c4693012e20aa6e",
        "uiLocales": "false",
        "jwksUrl": "https://gitlab.plantmicrobe.de/oauth/discovery/keys",
        "filteredByClaim": "false",
        "backchannelSupported": "false",
        "issuer": "https://gitlab.plantmicrobe.de",
        "useJwksUrl": "true",
        "loginHint": "false",
        "pkceEnabled": "false",
        "clientAuthMethod": "client_secret_post",
        "authorizationUrl": "https://gitlab.plantmicrobe.de/oauth/authorize",
        "disableUserInfo": "false",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "passMaxAge": "false",
        "allowedClockSkew": "0",
        "defaultScope": "api openid profile email"
      }
    }
  ],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "6a32e450-cfc2-4c76-a703-355c5a93a261",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "2918ef88-7ea3-433b-bd3e-e3f824b89a67",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "225e10a2-f53c-4092-adb6-d210a3d4a8fd",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "088740ce-8d00-452c-87fe-76c753b97ad3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "7b7413f9-4f0e-492b-8a8b-5f7ab31f39c8",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "562f35b7-8ca1-4cb5-b7ff-c3f9cce6afea",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "dfbe893b-0e95-4125-b2b2-86e0b5160fe6",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "17651754-c3fe-4818-8cd9-7f1d02917ca2",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "ef5f9b00-f42b-426d-a7e7-83e6140573f1",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "fc933863-1623-41f0-b7d7-c61471816089",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "fcec3657-f210-4863-9cad-38378dfca1c5",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "b1697c94-6756-4dc0-a45a-1654b0c55c73",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "d59431ec-ab72-4775-a135-75f064616871",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "4db0c5fe-afa4-4d2f-8dbe-104cb439a3b9",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b35daa45-8609-4330-ab56-d138fe409629",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "14b5e880-a0a9-4355-8bd7-32f3c915aee6",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3e0b3995-692b-402a-aca6-5d2125f48627",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b88e343a-a962-4344-b904-6086b42f2eaf",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1413b1cc-8826-408d-adc8-af4ff85ef8c6",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "507d4e47-3bf6-4cea-a097-f7cd91a1230f",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "98d70c8a-6c38-4210-b8b3-77f96fb16089",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f488d38-6300-4d1c-aaf8-25f5f9eb2852",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ca86e66a-5c3d-49a8-9b04-056c3d9c0e80",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c5d9c8fb-dc3c-4c7c-91b7-5b3538d34f18",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2faeebc2-8976-4404-9382-20271deb684c",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "edfa4fba-b81a-407d-8f45-4f5ecd61a68f",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "27d8f00d-14a6-4e21-9734-09514e07c3ec",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36bc766a-07f9-4ff9-ab60-70646e8f29e9",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2c8581e5-ff70-454e-b6bb-514400c97373",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "25579845-0443-4633-9aca-3593caa77bac",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9a0cb62c-3d87-4e4d-8c9c-e7f000f79dd9",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "1ae64789-3be5-4f75-b89f-9314274dde3e",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "1301db4e-e573-4a27-8305-1d16a5ee49a1",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-execute-actions": "",
    "actionTokenGeneratedByUserLifespan-verify-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-reset-credentials": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "shortVerificationUri": ""
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}